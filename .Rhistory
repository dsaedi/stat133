x
x == 3
y
y <- 1:5
y
y > 3
5 == 5
'5' == 5
class('5')
class(5)
as.numeric('5')
'a' == 5
5L == 5.0
identical('5', 5)
'5' == 5
all(c(1, 2, 3, 4) > 0)
any(c(1, 2, 3, 4) < 2.5)
5 > 1
5 < 7
5 > 10
5 >= 5
x <- 5
x
x > 0
x < 10
(x > 0) & (x < 10)
x
x <- 1:100
x
class(x)
length(x)
head(x)
head(x, n = 2)
tail(x)
tail(x, n = 3)
summary(x)
1
storage.mode(1)
1L
storage.mode(1L)
x
x + 3
3
is.vector(3)
1:5
11:15
c(TRUE, FALSE, TRUE) & c(TRUE, FALSE, FALSE)
c(TRUE, FALSE, TRUE) && c(TRUE, FALSE, FALSE)
'string'
"string"
'something like "this"'
"something like 'this'"
'an 'example' !'
character(4)
""
''
character(4)
character(0)
a <- character(0)
a
''
a == ''
identical(a, '')
lencth(a)
length(a)
length('')
a
a
a[1] <- 'a'
a
a[2] <- 'b'
a
a
length(a)
a
a[5] <- 'i'
a
a <- 'kjsdhfklasjd'
a
b <- c('e', 's', 't')
b
rep(c('d', 'f'), 2)
character(5)
paste(1, 2)
paste(1:4, letters[1:4])
paste(letters[1:5], 1)
paste(letters[1:5], 1, sep = '.')
paste(letters[1:5], 1, sep = '')
paste(letters[1:5], 1, collapse = '')
paste(letters[1:5], 1, collapse = '', sep='')
paste0(letters[1:5], 1)
paste0(letters[1:5])
paste0('a', 'b', 'c')
paste0(c('a', 'b', 'c'))
paste(c('a', 'b', 'c'), collapse = '', sep = '')
cols <- c("blue", "red", "blue", "gray", "red")
cols
cols <- factor(cols)
cols1 <- c("blue", "red", "blue", "gray", "red")
cols <- factor(cols1)
cols1
cols
storage.mode(cols1)
storage.mode(cols)
cols
factor(c("md", "sm", "md", "lg", "sm", "lg"))
c("md", "sm", "md", "lg", "sm", "lg")
factor(c("md", "sm", "md", "lg", "sm", "lg"))
sizes <- factor(c("md", "sm", "md", "lg", "sm", "lg"),
levels = c("sm", "md", "lg"),
ordered = TRUE)
sizes
sizes
unclass(sizes)
sizes
class(sizes)
unclass(sizes)
vowels <- factor(c('a', 'a', 'e', 'i', 'o', 'u', 'i'))
vowels
vowels[1:4]
nvow <- vowels[1:4]
nvow
nlevels(nvow)
droplevels(nvow)
ordered = TRUE)
set.seed(321)income <- round(runif(n = 1000, min = 100, max = 500), 2)
set.seed(321)
income <- round(runif(n = 1000, min = 100, max = 500), 2)
income
income_level <- cut(x = income, breaks = 5)
income_level
income_level
head(income)
head(income, 50)
df <- data.frame(
name = c('Anakin', 'Padme', 'Luke', 'Leia'),
gender = c('male', 'female', 'male', 'female'),
height = c(1.88, 1.65, 1.72, 1.50),
weight = c(84, 45, 77, 49)
)
df
nrow(df)
ncol(df)
dim(df)
str(df)
df <- data.frame(
name = c('Anakin', 'Padme', 'Luke', 'Leia'),
gender = c('male', 'female', 'male', 'female'),
height = c(1.88, 1.65, 1.72, 1.50),
weight = c(84, 45, 77, 49),
stringsAsFactors = FALSE
)
df
str(df)
character(5)
df1 <- data.frame(
name = character(0),
gender = character(0),
height = numeric(0),
weight = numeric(0),
stringsAsFactors = FALSE
)
df1
df1 <- data.frame(
name = character(10),
gender = character(10),
height = numeric(10),
weight = numeric(10),
stringsAsFactors = FALSE
)
df1
1:9 / 9
mean(1:9)
68+86
154/2
46/4
file_dir = "~/Documents/stat133/stat133/datasets/"
cereals = read.csv(paste(file_dir, "cereals.csv", sep=""),
row.names=1)
cereals
stars(cereals)
stars(cereals, nrow = 5)
stars(cereals, nrow = 4)
op <- par(mar = c(1, 1, 1, 1))
stars(cereals, nrow = 4)
par(op)
op <- par(mar = c(1, 1, 0, 1))
stars(cereals, nrow = 4)
par(op)
stars(cereals, nrow = 4, key.loc = c(4, 4))
stars(cereals, nrow = 4, key.loc = c(10, 4))
op <- par(mar = c(1, 1, 0, 1))
stars(cereals, nrow = 4, key.loc = c(12, 2))
par(op)
op <- par(mar = c(1, 1, 0, 1))
stars(cereals, nrow = 4, key.loc = c(14, 2))
par(op)
op <- par(mar = c(1, 1, 0, 1))
stars(cereals, nrow = 4, key.loc = c(14, 2), key.xpd = TRUE)
par(op)
op <- par(mar = c(1, 0, 0, 1))
stars(cereals, nrow = 4, key.loc = c(14, 2), key.xpd = TRUE)
par(op)
pairs(cereals)
cor(cereals)
round(cor(cereals), 3)
print(round(cor(cereals), 3), print.gap = 2)
image(cor(cereals))
image(t(cor(cereals)))
image((cor(t(cereals)))
image((cor(t(cereals))))
image((cor(t(cereals))))
image(cor(t(cereals)))
image(cor(cereals))
?image
heatmap(cereals)
heatmap(as.matrix(cereals))
install.packages('corrgram')
corrgram(cereals)
library(corrgram)
corrgram(cereals)
corrgram(cereals, lower.panel = panel.shade)
corrgram(cereals, lower.panel = panel.shade, upper.panel = NULL)
library(ellipse)
install.packages('ellipse')
library(ellipse)
plotcorr(cereals)
plotcorr(cor(cereals))
plotcorr(cor(cereals),
col = colorRampPalette(c("firebrick3", "white", "navy"))(10)))
installed.packages("RColorBrewer")
install.packages("RColorBrewer")
library("RColorBrewer")
plotcorr(cor(cereals),
col = colorRampPalette(c("firebrick3", "white", "navy"))(10)))
plotcorr(cor(cereals),
col = colorRampPalette(c("firebrick3", "white", "navy"))(10))
parcoord(cereals)
library(MASS)
parcoord(cereals)
x = c("md", "sm", "md", "lg", "sm", "lg")
x
object.size(x)
y = factor(x)
object.size(y)
x
y
z = sample(x, 100, replace=TRUE)
w = factor(z)
object.size(z)
object.size(w)
z = sample(x, 1000, replace=TRUE)
w = factor(z)
object.size(z)
object.size(w)
rm(list = ls())
x = character(10)
x
""
''
character(0)
''
length('')
c('a', 'b', 'c')
paste(1, 2, 3)
paste('some', 'simple', 'example')
paste('some', 'simple', 'example', sep = '-')
paste('some', 'simple', 'example', sep = '/')
paste('some', 'simple', 'example', sep = '')
paste(c('a', 'b', 'c'))
paste('a', 'b', 'c')
paste(c('a', 'b', 'c'))
paste('a', 'b', 'c')
paste('a', 'b', 'c', sep = '', collapse = TRUE)
paste('a', 'b', 'c', sep = '', collapse = '')
paste('a', 'b', 'c', sep = '', collapse = '')
paste0('a', 'b', 'c')
paste('X', 1:5)
paste('X', 1:5, sep = '.')
colrs <- c("blue", "red", "blue", "gray", "red")
colrs
cols <- factor(colrs)
cols
object.size(colrs)
object.size(cols)
yes_no <- factor(c("yes", "yes", "no", "yes", "no"))
yes_no
yn = c("yes", "yes", "no", "yes", "no")
yn
sizes <- factor(c("md", "sm", "md", "lg", "sm", "lg"),
levels = c("sm", "md", "lg"),
ordered = TRUE)
sizes
cols
sizes <- factor(c("md", "sm", "md", "lg", "sm", "lg"),
ordered = TRUE)
sizes
set.seed(222)
y <- sample(letters[1:5], 15, rep = TRUE)
v <- as.factor(y)
v
new_levels <- list(I = c("a", "e"), II = c("b", "c", "d"))
levels(v) <- new_levels
v
sizes
unclass(sizes)
vowels <- factor(c('a', 'a', 'e', 'i', 'o', 'u', 'i'))
vowels
vowels[1:3]
a = vowels[1:3]
a
vowels
droplevels((a))
droplevels(a)
set.seed(321)
income <- round(runif(n = 100, min = 100, max = 500), 2)
income
inc <- cut(income, breaks = 5)
inc
inc
levels(inc)
df <- data.frame(
name = c('Anakin', 'Padme', 'Luke', 'Leia'),
gender = c('male', 'female', 'male', 'female'),
height = c(1.88, 1.65, 1.72, 1.50),
weight = c(84, 45, 77, 49)
)
df
str(df)
df <- data.frame(
name = c('Anakin', 'Padme', 'Luke', 'Leia'),
gender = c('male', 'female', 'male', 'female'),
height = c(1.88, 1.65, 1.72, 1.50),
weight = c(84, 45, 77, 49),
stringsAsFactors = FALSE
)
df
str(df)
str(df)
xor(TRUE, FALSE)
!(TRUE | FALSE)
(TRUE | FALSE)
?xor
xor(FALSE, FALSE)
FALSE | FALSE
xor(TRUE, TRUE)
TRUE | TRUE
TRUE | FALSE
.Platform$OS.type
paste(1:3, c("!", "?", "+"), sep = '', collapse = "")
paste(1:3, c("!", "?", "+"), collapse = "")
?paste
paste(1:3, c("!", "?", "+"), collapse = "-")
paste(1:3, c("!", "?", "+"), collapse = '')
paste(1:3, c("!", "?", "+"), sep = '', collapse = '')
paste(1:3, c("!", "?", "+"), sep = '', collapse = '--')
paste(1:3, c("!", "?", "+"), sep = '', collapse = " ")
paste(1:3, c("!", "?", "+"), sep = '', collapse = "*")
paste(1:3, c("!", "?", "+"), sep = '', collapse = "--")
library(httr)
# now load the data from the github repository of the course
response <- GET(url="https://github.com/gastonstat/stat133/raw/master/datasets/superbowl_teams.RData")
load(rawConnection(response$content))
ls()
loser
rm(list = ls())
\documentclass[12pt]{beamer}
'sdf'
colrs <- c('blue', 'red', 'blue', 'green', 'red')
cols <- factor(colrs)
object.size(colrs)
object.size(cols)
sizes <- factor(c('sm', 'md', 'lg', 'sm', 'md')
levels = c('sm', 'md', 'lg'),
ordered = TRUE)
sizes
sizes <- factor(c('sm', 'md', 'lg', 'sm', 'md'),
levels = c('sm', 'md', 'lg'),
ordered = TRUE)
sizes
rm(list =ls())
\usepackage{graphicx}
getwd()
getwd()
df <- read.csv('Documents/stat133/stat133/datasets/starwarstoy.csv')
df
df
class(df)
str(df)
read.table
str(df)
df <- read.csv('Documents/stat133/stat133/datasets/starwarstoy.csv',)
df <- read.csv('Documents/stat133/stat133/datasets/starwarstoy.csv', stringsAsFactors = FALSE)
str(df)
system("~/Documents/stat133/HW ~/Dropbox/Stat133_Fall2015/HW")
system("cp ~/Documents/stat133/HW ~/Dropbox/Stat133_Fall2015/HW")
system("cp ~/Documents/stat133/HW/ ~/Dropbox/Stat133_Fall2015/HW")
system("cp ~/Documents/stat133/HW ~/Dropbox/Stat133_Fall2015/")
system("cp -r ~/Documents/stat133/HW ~/Dropbox/Stat133_Fall2015/")
system("cp -r ~/Documents/stat133/Lab ~/Dropbox/Stat133_Fall2015/")
2/41
2+3+6+5+10+14+1
2/41
2+3+6+5+10+4+1
2/31
iris
head(iris)
?read.table
setwd("~/Documents/stat133/stat133")
col_class <- c(
'character', 'factor', 'numeric', 'numeric',
'integer', 'factor', 'factor', 'factor'
)
tents <- read.table("datasets/tents1.csv",
sep =',', header = TRUE,
colClasses = col_class)
str(tents)
tdf1 <- read.csv("datasets/tents1.csv")
head(tdf1)
?download.file
download.file('https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/tents1.csv',
destfile = '~/Downloads/tents1.csv')
library(readr)
install.package("readr")
install.packages("readr")
library(readr)
tents <- read_csv('datasets/tents1.csv', col_names = TRUE,
col_class = 'ccddiccc')
tents <- read_csv('datasets/tents1.csv', col_names = TRUE,
col_type = 'ccddiccc')
str(tents)
x <- readLines('~/Documents/stat133/HW/HW2/homework02_solutions.R')
length(x)
outfile <- '~/Documents/stat133/HW/HW2/homework02.R'
# auxiliar function
has_hash <- function(x) {
what <- substr(x[1], 1, 1)
what == "#"
}
cat(x[1], file = outfile)
cat('\n', file = outfile, append = TRUE)
for (i in 2:length(x)) {
if (has_hash(x[i])) {
cat(x[i], file = outfile, append = TRUE)
cat('\n', file = outfile, append = TRUE)
} else {
if (x[i] == '') {
cat('\n\n', file = outfile, append = TRUE)
}
}
}
file.copy(from = '~/Documents/stat133/HW/HW2/homework02.R',
to = '~/Documents/stat133/stat133/HW2/homework02.R',
overwrite = TRUE)
library(dplyr)
installed.packages(c("ggplot2", "dplyr", "tidyr"))
install.packages(c("ggplot2", "dplyr", "tidyr"))
library(tidyr)
?separate()
install.packages("reshape2")
library(reshape2)
?melt
geo_regions <- c("north", "east", "south", "west")
type_products <- c("tablet", "notebook", "phone")
# generate sales data frame (fake data)
set.seed(555)
sales <- data.frame(
region = sample(geo_regions, size = 150, replace = TRUE),
product = sample(type_products, size = 150, replace = TRUE)
)
sales
x = table(sales$region, sales$product)
x
melt(x)
cast(melt(x))
dcast(melt(x))
separate(x, into=c("phone"))
separate(x, into=c("phone", "tablet"))
?separate
separate(x, "east", into=c("phone", "tablet"))
separate(x, "East", into=c("phone", "tablet"))
x
as.data.frame(x)
x
region
regions
vec_region
vec_regions
ls()
sales
ls()
regions = factor(geo_regions)
regions
regions = sales$regions
regions
regions = sales$region
regions
as.numeric(regions)
y = unclass(regions)
class(y)
y
attributes(y)
as.factor(y)
factor(y)
x
regions
sort(regions)
order(regions)
levels(regions)
labels(reginos)
labels(regions)
rm(list = ls())
